<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>de.apaxo.translation</groupId>
	<artifactId>gengo-webcrawler</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>Apaxo Gengo Webcrawler</name>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
	</properties>
	<description>This system can crawl a website and send the pages afterwards to the gengo translation service.</description>
	<url>https://github.com/ManuelB/gengo-webcrawler</url>
	<organization>
		<name>Apaxo GmbH</name>
		<url>http://www.apaxo.de</url>
	</organization>
	<scm>
		<url>https://github.com/ManuelB/gengo-webcrawler.git</url>
	</scm>
	<issueManagement>
		<url>https://github.com/ManuelB/gengo-webcrawler/issues</url>
		<system>Gihub</system>
	</issueManagement>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.gengo</groupId>
			<artifactId>gengo-client</artifactId>
			<version>2.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>7.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>1.14.2</version>
		</dependency>
		<dependency>
			<!-- Some addons like conditional comments for old ies for JSF -->
			<groupId>org.omnifaces</groupId>
			<artifactId>omnifaces</artifactId>
			<version>1.7</version> <!-- Or 1.8-SNAPSHOT -->
		</dependency>
		<dependency>
			<!-- best widgets for JSF -->
			<groupId>org.primefaces</groupId>
			<artifactId>primefaces</artifactId>
			<version>6.0</version>
		</dependency>
		<dependency>
			<groupId>javax.cache</groupId>
			<artifactId>cache-api</artifactId>
			<version>1.0.0-PFD</version>
		</dependency>
		<dependency>
			<groupId>org.infinispan</groupId>
			<artifactId>infinispan-jcache</artifactId>
			<version>6.0.2.Final</version>
		</dependency>
	</dependencies>
	<build>
	<finalName>gengo-webcrawler</finalName>
    	<plugins>
 			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<!-- http://java.dzone.com/tips/stamping-version-number-and & http://stackoverflow.com/questions/12362984/property-file-processing-during-build-time -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.4.3</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/classes</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/credentials</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>1.3.1</version>
				<executions>
					<execution>
						<id>enforce-property</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireProperty>
									<property>gengo.credentials.public_key</property>
									<message>You must set the gengo.credentials.public_key e.g
										-Dgengo.credentials.public_key=dassada !</message>
								</requireProperty>
								<requireProperty>
									<property>gengo.credentials.private_key</property>
									<message>You must set the gengo.credentials.private_key e.g
										-Dgengo.credentials.private_key=dassada !</message>
								</requireProperty>
					            <requireProperty>
									<property>gengo.credentials.sandbox</property>
									<message>You must set the gengo.credentials.sandbox e.g
										-Dgengo.credentials.sandbox=true !</message>
                                    <regex>^(true|false)$</regex>
                                    <regexMessage>"gengo.credentials.sandbox must be true or false."</regexMessage>
								</requireProperty>
		</rules>
							<fail>true</fail>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.wildfly.plugins</groupId>
				<artifactId>wildfly-maven-plugin</artifactId>
				<version>1.0.2.Final</version>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.glassfish.embedded</groupId>
					<artifactId>maven-embedded-glassfish-plugin</artifactId>
					<version>3.1.2.2</version>
					<configuration>
						<goalPrefix>glassfish</goalPrefix>
						<app>target/${project.artifactId}.${project.packaging}</app>
						<contextRoot>${project.artifactId}</contextRoot>
						<port>8010</port>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>org.glassfish.main</groupId>
							<artifactId>simple-glassfish-api</artifactId>
							<version>4.0-b72</version>
						</dependency>
						<!-- Use Glassfish 4.0 https://blogs.oracle.com/brunoborges/entry/glassfish_4_beta_and_maven -->
						<dependency>
							<groupId>org.glassfish.main.extras</groupId>
							<artifactId>glassfish-embedded-all</artifactId>
							<version>4.0</version>
						</dependency>
					</dependencies>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<repositories>
		<repository>
			<id>glassfish-repository</id>
			<name>Java.net Repository for Glassfish</name>
			<url>http://download.java.net/maven/glassfish</url>
		</repository>
	</repositories>
	<profiles>
		<profile>
			<!-- When built in OpenShift the 'openshift' profile will be used when 
				invoking mvn. -->
			<!-- Use this profile for any OpenShift specific customization your app 
				will need. -->
			<!-- By default that is to put the resulting archive into the 'deployments' 
				folder. -->
			<!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
			<id>openshift</id>
			<properties>
				<maven.compiler.executable>${env.OPENSHIFT_WILDFLY_DIR}usr/lib/jvm/jdk1.8.0_05/bin/javac</maven.compiler.executable>
				<maven.compiler.fork>true</maven.compiler.fork>
			</properties>
			<build>
				<finalName>${project.artifactId}</finalName>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.3</version>
						<configuration>
							<failOnMissingWebXml>false</failOnMissingWebXml>
							<outputDirectory>deployments</outputDirectory>
							<warName>ROOT</warName>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
